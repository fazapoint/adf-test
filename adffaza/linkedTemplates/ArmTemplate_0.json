{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adffaza"
		},
		"ADLS_faza_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_faza'"
		},
		"AzureSQL_faza_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSQL_faza'"
		},
		"SQL_faza_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SQL_faza'"
		},
		"SQL_LAPTOP_0DOCT8SG_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SQL_LAPTOP_0DOCT8SG'"
		},
		"ADLS_faza_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccfaza.dfs.core.windows.net/"
		},
		"AzureSQL_faza_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "fazaserver.database.windows.net"
		},
		"AzureSQL_faza_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DataDb"
		},
		"AzureSQL_faza_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "faza"
		},
		"SQL_faza_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "fazaserver.database.windows.net"
		},
		"SQL_faza_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DataDb"
		},
		"SQL_faza_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "faza"
		},
		"SQL_LAPTOP_0DOCT8SG_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "LAPTOP-0DOCT8SG"
		},
		"SQL_LAPTOP_0DOCT8SG_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2022"
		},
		"SQL_LAPTOP_0DOCT8SG_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "faza"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_faza')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_faza_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_faza_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_faza')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSQL_faza_properties_typeProperties_server')]",
					"database": "[parameters('AzureSQL_faza_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSQL_faza_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSQL_faza_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_faza')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SQL_faza_properties_typeProperties_server')]",
					"database": "[parameters('SQL_faza_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SQL_faza_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SQL_faza_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/localfaza')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ADLS_faza')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_faza",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string",
						"defaultValue": "fazatest"
					},
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"delimiter_name": {
						"type": "string",
						"defaultValue": ","
					},
					"row_as_header": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().delimiter_name",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": {
						"value": "@dataset().row_as_header",
						"type": "Expression"
					},
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_faza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ADLS_faza_MoviesADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_faza",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "moviesADLS.csv",
						"folderPath": "Data Source",
						"fileSystem": "fazatest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_faza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_ADLS_faza_Ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_faza",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADLS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "data_output",
						"fileSystem": "fazatest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DepartmentID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "GroupName",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_faza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_faza')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_faza",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Database"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Nama",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_faza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_LAPTOP_0DOCT8SG')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SQL_LAPTOP_0DOCT8SG_properties_typeProperties_server')]",
					"database": "[parameters('SQL_LAPTOP_0DOCT8SG_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('SQL_LAPTOP_0DOCT8SG_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SQL_LAPTOP_0DOCT8SG_password')]"
					}
				},
				"connectVia": {
					"referenceName": "localfaza",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/localfaza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/example_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "csv_to_sql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ADLS_faza",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fazatest",
									"folder_name": "Data Source",
									"file_name": "CustomerOrders.csv",
									"delimiter_name": ",",
									"row_as_header": true
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_faza",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "dbo",
									"table_name": "CustomerOrders"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Example"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-12T04:16:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_ADLS_faza')]",
				"[concat(variables('factoryId'), '/datasets/SQL_faza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_LAPTOP_0DOCT8SG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_LAPTOP_0DOCT8SG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Database"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_LAPTOP_0DOCT8SG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/example_practice_case_1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSV_ADLS_faza_MoviesADLS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CSV_ADLS_faza_MoviesADLS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "window1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as string,",
						"          title as string,",
						"          genres as string,",
						"          year as string,",
						"          Rating as string,",
						"          {Rotton Tomato} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          movie,",
						"          title,",
						"          genres,",
						"          year,",
						"          Rating,",
						"          {Rotten Tomato} = {Rotton Tomato}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(toInteger(year) > 1950) ~> filter1",
						"filter1 derive(PrimaryGenres = iif(locate('|', genres)>1,left(genres,locate('|',genres)-1),genres)) ~> derivedColumn1",
						"derivedColumn1 window(over(PrimaryGenres,",
						"          year),",
						"     asc({Rotten Tomato}, true),",
						"     rank = rank()) ~> window1",
						"window1 aggregate(groupBy(PrimaryGenres,",
						"          year),",
						"     AverageRating = avg(toInteger({Rotten Tomato})),",
						"          HighestRating = first(title),",
						"          LowestRated = last(title),",
						"          Count = count()) ~> aggregate1",
						"aggregate1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          movie as string,",
						"          title as string,",
						"          genres as string,",
						"          year as string,",
						"          Rating as string,",
						"          {Rotton Tomato} as string",
						"     ),",
						"     partitionFileNames:['Rating2.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_ADLS_faza_MoviesADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/example_local_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sql_to_csv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_LAPTOP_0DOCT8SG",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "HumanResources",
									"table_name": "Department"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_ADLS_faza",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fazatest",
									"folder_name": "data_output",
									"file_name": "Department.csv",
									"delimiter_name": ",",
									"row_as_header": true
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Example"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_LAPTOP_0DOCT8SG')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ADLS_faza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/example_practice_case_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "example_practice_case_1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_ADLS_faza",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "fazatest",
									"folder_name": "data_output",
									"file_name": "Rating2.csv",
									"delimiter_name": ",",
									"row_as_header": true
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_faza",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "dbo",
									"table_name": "Ratings"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Example"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/example_practice_case_1')]",
				"[concat(variables('factoryId'), '/datasets/CSV_ADLS_faza')]",
				"[concat(variables('factoryId'), '/datasets/SQL_faza')]"
			]
		}
	]
}